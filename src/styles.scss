/* You can add global styles to this file, and also import other style files */

@import '~@angular/material/prebuilt-themes/indigo-pink.css';
@import url('https://fonts.googleapis.com/css?family=Dosis');

/* basic start */

:root {
    /* generic */
    --gutterSm: 0.4rem;
    --gutterMd: 0.8rem;
    --gutterLg: 1.6rem;
    --gutterXl: 2.4rem;
    --gutterXx: 7.2rem;
    --colorPrimary400: #7e57c2;
    --colorPrimary600: #5e35b1;
    --colorPrimary800: #4527a0;
    --fontFamily: "Dosis", sans-serif;
    --fontSizeSm: 1.2rem;
    --fontSizeMd: 1.6rem;
    --fontSizeLg: 2.1rem;
    --fontSizeXl: 2.8rem;
    --fontSizeXx: 3.6rem;
    --lineHeightSm: 1.1;
    --lineHeightMd: 1.8;
    --transitionDuration: 300ms;
    --transitionTF: cubic-bezier(0.645, 0.045, 0.355, 1);
    /* floated labels */
    --inputMarginV: var(--gutterMd);
    --inputMarginH: var(--gutterLg);
    --inputPaddingV: var(--gutterMd);
    --inputPaddingH: var(--gutterLg);
    --inputFontSize: var(--fontSizeLg);
    --inputLineHeight: var(--lineHeightSm);
    --labelScaleFactor: 0.8;
    --labelDefaultPosY: 50%;
    --labelTransformedPosY: calc( (var(--labelDefaultPosY)) - (var(--inputPaddingV) * var(--labelScaleFactor)) - (var(--inputFontSize) * var(--inputLineHeight)));
    --inputTransitionDuration: var(--transitionDuration);
    --inputTransitionTF: var(--transitionTF);
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

html {
    font-size: 10px;
}

body {
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    width: 100vw;
    height: 100vh;
    margin: 0;
    color: #455A64;
    /* background-color: #7E57C2; */
    font-family: var(--fontFamily);
    font-size: var(--fontSizeMd);
    line-height: var(--lineHeightMd);
}


/* basic end */

h1.app-name {
    margin-left: 8px;
}


/* search-input start */

.search-box {
    width: 50%;
    position: relative;
}

.search-style {
    display: block;
    margin: 0 var(--inputMarginH);
    padding: var(--inputPaddingV) var(--inputPaddingH);
    color: black;
    width: 100%;
    font-family: inherit;
    font-size: var(--inputFontSize);
    font-weight: inherit;
    line-height: var(--inputLineHeight);
    border: none;
    /* border-radius: 0.4rem; */
    transition: box-shadow var(--transitionDuration);
}


/* search-input end */


/* scroll start */

.custom-scroll::-webkit-scrollbar {
    width: 6px;
    background-color: #F5F5F5;
}

.custom-scroll::-webkit-scrollbar-thumb {
    background-color: black;
}

.custom-scroll::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    background-color: #F5F5F5;
}


/* scroll end */

.main-container {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}

.is-mobile .toolbar {
    position: fixed;
    /* Make sure the toolbar will stay on top of the content as it scrolls past. */
    z-index: 2;
}

.sidenav-container {
    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;
}

.is-mobile .sidenav-container {
    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
}


/* Navi Start */

.sidenav-component {
    width: 22.2719rem;
}

.sidenav-contents {
    border-bottom: 1px solid black;
    width: 90%;
    margin: 10% 5% 2% 5%;
    padding-bottom: 5%;
}